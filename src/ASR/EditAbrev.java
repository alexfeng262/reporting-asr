/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ASR;

import asr_utils.ResourceManager;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.json.Json;
import javax.json.JsonObject;
import javax.json.JsonObjectBuilder;
import javax.json.JsonReader;
import javax.json.JsonValue;
import javax.json.JsonWriter;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author alexf
 */
public class EditAbrev extends javax.swing.JDialog {

    /**
     * Creates new form EditAbrev
     */

    public EditAbrev(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        int height = screenSize.height * 8 / 10;
        int width = screenSize.width * 2 / 10;
        this.setMinimumSize(new Dimension(width, height));
        load_table();
        
  
    }
    public static void showMessageGUI(String msg, String type){
        String log = "";
        int option_type = JOptionPane.ERROR_MESSAGE ;
        if(null == type){
            log = "ERROR";
            msg = "tipo no existe";
            option_type = JOptionPane.ERROR_MESSAGE;
        }
        else switch (type) {
            case "info":
                log = "INFORMACIÓN";
                option_type = JOptionPane.INFORMATION_MESSAGE;
                break;
            case "warning":
                log = "ALERTA";
                option_type = JOptionPane.WARNING_MESSAGE;
                break;
            case "error":
                log = "ERROR";
                option_type = JOptionPane.ERROR_MESSAGE;
                break;
        }
        JOptionPane.showMessageDialog(null, msg, 
                log, 
                option_type);
    }
    private void load_table(){
        try {
            File abc_json = new File("etc\\word_correction\\abc.json");
            JsonReader reader2 = Json.createReader(new InputStreamReader(new FileInputStream(abc_json), "UTF8"));
            
            JsonObject abcObject = reader2.readObject();
            reader2.close();
            
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            
         
            Set<Map.Entry<String, JsonValue>> kvPairs = abcObject.entrySet();
            
            for (String key: abcObject.keySet()) {
                model.addRow(new Object[]{key, abcObject.getString(key)});
            
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(EditAbrev.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(EditAbrev.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        add_btn = new javax.swing.JButton();
        del_btn = new javax.swing.JButton();
        save_btn = new javax.swing.JButton();
        compilar_btn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Abreviatura", "Pronunciación"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        table.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        table.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(table);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.4;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jScrollPane1, gridBagConstraints);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.Y_AXIS));

        add_btn.setText("Agregar");
        add_btn.setMaximumSize(new java.awt.Dimension(80, 23));
        add_btn.setMinimumSize(new java.awt.Dimension(80, 23));
        add_btn.setPreferredSize(new java.awt.Dimension(55, 23));
        add_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_btnActionPerformed(evt);
            }
        });
        jPanel2.add(add_btn);

        del_btn.setText("Eliminar");
        del_btn.setMaximumSize(new java.awt.Dimension(80, 23));
        del_btn.setMinimumSize(new java.awt.Dimension(80, 23));
        del_btn.setPreferredSize(new java.awt.Dimension(50, 23));
        del_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                del_btnActionPerformed(evt);
            }
        });
        jPanel2.add(del_btn);

        save_btn.setText("Guardar");
        save_btn.setMaximumSize(new java.awt.Dimension(80, 23));
        save_btn.setMinimumSize(new java.awt.Dimension(80, 23));
        save_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_btnActionPerformed(evt);
            }
        });
        jPanel2.add(save_btn);

        compilar_btn.setText("Compilar");
        compilar_btn.setMaximumSize(new java.awt.Dimension(80, 23));
        compilar_btn.setMinimumSize(new java.awt.Dimension(80, 23));
        compilar_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compilar_btnActionPerformed(evt);
            }
        });
        jPanel2.add(compilar_btn);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jPanel2, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void add_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_btnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.addRow(new Object[]{"", ""});
        
        int lastIndex = table.getRowCount() - 1;
        table.changeSelection(lastIndex, 0,false,false);
    }//GEN-LAST:event_add_btnActionPerformed

    private void save_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_btnActionPerformed
        
        OutputStream os = null;
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        
        try {
            JsonObjectBuilder abvBuilder = Json.createObjectBuilder();
 
            for (int count = 0; count < model.getRowCount(); count++){
                abvBuilder.add(model.getValueAt(count, 0).toString(), model.getValueAt(count, 1).toString());
            }
            
            JsonObject abvJsonObject = abvBuilder.build();

            os = new FileOutputStream("etc\\word_correction\\abc.json");
            
            JsonWriter jsonWriter = Json.createWriter(os);
            jsonWriter.writeObject(abvJsonObject);
            jsonWriter.close();
            showMessageGUI("Se ha guardado el archivo","info");
        } catch (Exception ex) {
            Logger.getLogger(EditAbrev.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_save_btnActionPerformed

    private void del_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_del_btnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        try{
            int SelectedRowIndex = table.getSelectedRow();
            model.removeRow(SelectedRowIndex);
       }catch(Exception ex)
       {
          
       }

    }//GEN-LAST:event_del_btnActionPerformed

    private void compilar_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compilar_btnActionPerformed
        BufferedReader br = null;
        try {
            // TODO add your handling code here:
            ResourceManager rm = new ResourceManager();
            List<String> data = new ArrayList<>();
            File file = new File(rm.getDefault_corpus_file_path());
            br = new BufferedReader(new InputStreamReader(new FileInputStream(file), "UTF8"));
            String st;
            while ((st = br.readLine()) != null){
                //text = text + " " +st;
                if(!st.isBlank())
                    data.add(st);
                //i++;
            }   br.close();
            LanguageModelBuilder lm = new LanguageModelBuilder(null,null);
            lm.buildVocab(data, rm.getDefault_dictionary_file_path());
            
            showMessageGUI("Se ha compilado correctamente", "info");
        } catch (FileNotFoundException ex) {
            showMessageGUI("Error excepcion de tipo: "+ ex.getMessage(), "error");
            Logger.getLogger(EditAbrev.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            showMessageGUI("Error excepcion de tipo: "+ ex.getMessage(), "error");
            Logger.getLogger(EditAbrev.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_compilar_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditAbrev.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditAbrev.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditAbrev.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditAbrev.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EditAbrev dialog = new EditAbrev(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_btn;
    private javax.swing.JButton compilar_btn;
    private javax.swing.JButton del_btn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton save_btn;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
